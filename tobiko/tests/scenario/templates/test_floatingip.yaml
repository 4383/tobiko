heat_template_version: 2013-05-23

description: |
  Default stack used by tests. One instance with FIP.

parameters:
  flavor:
    type: string
  image:
    type: string
  subnet_cidr:
    type: string
    default: 190.40.2.0/24
  public_net:
    type: string
    default: public
  private_net:
    type: string
    default: heat-net
  dns_servers:
    type: comma_delimited_list
    default: ["8.8.8.8", "8.8.4.4"]

resources:

  sg:
    type: OS::Neutron::SecurityGroup
    properties:
      name: sg
      description: Security group to allow ICMP and SSH
      rules:
      - protocol: icmp
      - protocol: tcp
        port_range_min: 22
        port_range_max: 22

  sg2:
    type: OS::Neutron::SecurityGroup
    properties:
      name: sg2
      description: Security group to deny ICMP and SSH

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: {get_param: public_net}

  floating_ip2:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: {get_param: public_net}

  network:
    type: OS::Neutron::Net

  subnet:
    type: OS::Neutron::Subnet
    properties:
      network: {get_resource: network}
      ip_version: 4
      cidr: {get_param: subnet_cidr}
      dns_nameservers: {get_param: dns_servers}

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: {get_param: public_net}

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router: {get_resource: router}
      subnet: {get_resource: subnet}

  wait_handle:
    type: OS::Heat::WaitConditionHandle

  server:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      flavor: {get_param: flavor}
      networks:
      - subnet: {get_resource: subnet}
      security_groups:
      - {get_resource: sg}

  # Server without security groups
  server2:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      flavor: {get_param: flavor}
      networks:
      - subnet: {get_resource: subnet}
      security_groups:
      - {get_resource: sg2}

  server_floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: {get_resource: floating_ip}
      port_id: {get_attr: [server, addresses, {get_resource: network}, 0, port]}

  server_floating_ip_assoc2:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: {get_resource: floating_ip2}
      port_id: {get_attr: [server2, addresses, {get_resource: network}, 0, port]}

outputs:
  fip:
    value: {get_attr: [floating_ip, floating_ip_address]}
  fip2:
    value: {get_attr: [floating_ip2, floating_ip_address]}
